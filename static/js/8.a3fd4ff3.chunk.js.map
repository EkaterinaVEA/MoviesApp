{"version":3,"sources":["pages/HomePage.jsx"],"names":["HomePage","useState","movies","setMovies","status","setStatus","totalPages","setTotalPages","isExact","useRouteMatch","history","useHistory","location","useLocation","currentPage","Number","URLSearchParams","search","get","useEffect","a","push","toast","warning","getTranding","data","results","total_pages","console","log","getMovies","onClick","selected","window","scrollTo","top","behavior"],"mappings":"0SASe,SAASA,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAoCJ,mBAAS,MAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEQC,EAAYC,cAAZD,QACFE,EAAUC,cACVC,EAAWC,cACXC,EAAcC,OAAO,IAAIC,gBAAgBJ,EAASK,QAAQC,IAAI,UAAY,EAEhFC,qBAAU,WAAM,4CAEhB,gCAAAC,EAAA,6DACSZ,IACHE,EAAQW,KAAK,KACbC,IAAMC,QAAQ,mBAElBlB,EAAU,WALZ,kBAO2BmB,YAAYV,GAPvC,OAOcW,EAPd,OAQgBC,EAAyBD,EAAzBC,QAASC,EAAgBF,EAAhBE,YACjBxB,EAAUuB,GACVnB,EAAcoB,GACdtB,EAAU,YAXlB,kDAaMuB,QAAQC,IAAR,MACAxB,EAAU,QAdhB,2DAFgB,uBAAC,WAAD,wBAmBhByB,KACG,CAAChB,EAAaJ,EAASF,IAS5B,MAAe,SAAXJ,EAEE,6BAGW,YAAXA,EAEA,cAAC,IAAD,IAGW,aAAXA,EAGF,qCACKF,GAAU,cAAC,IAAD,CAAWA,OAAQA,IAC9B,cAAC,IAAD,CACEI,WAAYA,EACZyB,QAxBkB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACzBtB,EAAQW,KAAR,2BACIT,GADJ,IAECK,OAAqB,IAAbe,EAAiB,GAAjB,eAA4BA,EAAS,MAE/CC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,YAoB9BtB,YAAaA,YARrB","file":"static/js/8.a3fd4ff3.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getTranding } from \"../services/api\";\nimport {MovieList} from \"../components/MovieList/MovieList\";\nimport Pagination  from \"../components/Pagination/Pagination\"\nimport Loader from \"../components/Loader/Loader\";\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(\"idle\");\n  const [totalPages, setTotalPages] = useState(null);\n  \n  const { isExact } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const currentPage = Number(new URLSearchParams(location.search).get(\"page\")) || 1;\n\n  useEffect(() => {\n  \n  async function getMovies() {\n      if (!isExact) {\n        history.push(\"/\");\n        toast.warning(\"Page not found\");\n      }\n    setStatus(\"pending\");\n      try {\n          const data = await getTranding(currentPage);\n          const { results, total_pages } = data;\n          setMovies(results);\n          setTotalPages(total_pages);\n          setStatus(\"resolved\");\n    } catch (error) {\n        console.log(error);\n        setStatus(\"idle\");\n    }\n  }\n  getMovies();\n  }, [currentPage, history, isExact])\n\n    const handleClickPage = ({selected}) => {\n     history.push({\n      ...location,\n      search: selected === 0 ? \"\":`page=${selected+1}`,\n     })\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }\nif (status === \"idle\") {\n    return (\n      <></>\n    )\n  }\n  if (status === \"pending\") {\n    return (\n      <Loader />\n    )\n  }\n  if (status === \"resolved\")\n  {\n    return (\n    <>\n        {movies && <MovieList movies={movies} />}\n        <Pagination\n          totalPages={totalPages}\n          onClick={handleClickPage}\n          currentPage={currentPage} />\n        \n    </>\n    )\n  }\n};"],"sourceRoot":""}