{"version":3,"sources":["components/Cast/Cast.styles.jsx","components/Cast/Cast.jsx","pages/CastPage.jsx"],"names":["List","Actor","Image","Name","Cast","actors","map","id","name","profile_path","width","src","defaultImg","CastPage","useParams","useState","setActors","useEffect","a","getCast","cast","length","Error","console","log","toast","info","window","scrollTo","top","behavior","getCastDetails"],"mappings":"0PAEO,IAAMA,EAAI,iLAQJC,EAAK,8OAOLC,EAAK,0GAKLC,EAAI,yL,eClBV,SAASC,EAAT,GAAyB,IAAVC,EAAS,EAATA,OAClB,OACQ,cAACL,EAAD,UACKK,EAAOC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,aAAZ,OACR,eAACR,EAAD,WACI,cAACC,EAAD,CACIQ,MAAM,MACNC,IAAKF,EAAY,6CAAyCA,GAAiBG,MAC/E,cAACT,EAAD,UAAOK,MAJCD,Q,kBCDjB,SAASM,IACpB,IAAQN,EAAOO,cAAPP,GACR,EAA4BQ,mBAAS,MAArC,mBAAOV,EAAP,KAAeW,EAAf,KAyBA,OAvBAC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,+EAE2BC,YAAQZ,GAFnC,WAEca,EAFd,QAIkBC,OAJlB,sBAKkB,IAAIC,MAAM,kBAL5B,OAQIN,EAAUI,GARd,gDAWQG,QAAQC,IAAR,MACAC,IAAMC,KAAK,kBAZnB,yBAcuBP,YAAQZ,GAd/B,QAcUa,EAdV,OAgBIJ,EAAUI,GACVO,OAAOC,SAAS,CAAEC,IAAK,IAAKC,SAAU,WAjB1C,0DADY,uBAAC,WAAD,wBAoBZC,KACD,CAACxB,IAGA,mCACKF,GAAU,cAACD,EAAD,CAAMC,OAAQA","file":"static/js/7.304c98e4.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const List = styled.ul`\nwidth: 840px;\nmargin: 0 auto;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n  gap: 20px 10px;\n`;\n\nexport const Actor = styled.li`\nborder: 1px solid var(--color-accent);\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 20%), 0 2px 5px 0 rgb(0 0 0 / 14%),\n    0 2px 10px -1px rgb(0 0 0 / 12%);\n`;\nexport const Image = styled.img`\n  height: 260px;\n  width: 100%;\n  object-fit: cover;\n`;\nexport const Name = styled.p`\n  margin: auto;\n  height: 100%;\n  font-size: 14px;\n  text-align: center;\n  color: var(--color-dark);\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;","import PropTypes from \"prop-types\";\nimport { Image, List, Actor, Name } from \"./Cast.styles\";\nimport defaultImg from \"../../images/defaultImg.png\";\n\nexport function Cast({actors}) {\n    return (\n            <List>\n                {actors.map(({id, name, profile_path}) => (\n                    <Actor key={id}>\n                        <Image\n                            width=\"200\"\n                            src={profile_path ? `https://image.tmdb.org/t/p/original${profile_path}` : defaultImg} />\n                        <Name>{name}</Name>\n                    </Actor>\n                ))}\n            </List>\n    )\n}\n\nCast.propTypes = {\n    actors: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n        profile_path: PropTypes.string,\n        }),\n    ),\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from \"../services/api\";\nimport { Cast } from \"../components/Cast/Cast\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function CastPage() {\n    const { id } = useParams();\n    const [actors, setActors] = useState(null);\n\n    useEffect(() => {\n        async function getCastDetails() {\n            try {\n                const cast = await getCast(id);\n\n                if (!cast.length) {\n                    throw new Error(\"Cast not found\");\n                }\n\n            setActors(cast);\n                \n            } catch (error) {\n                console.log(error)\n                toast.info(\"Cast not found\")\n            }\n            const cast = await getCast(id);\n\n            setActors(cast);\n            window.scrollTo({ top: 560, behavior: \"smooth\" });\n        }\n        getCastDetails();\n    }, [id])\n\n    return (\n        <>\n            {actors && <Cast actors={actors} />}\n        </>\n    )\n}"],"sourceRoot":""}